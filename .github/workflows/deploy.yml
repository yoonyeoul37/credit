name: Deploy to Cafe24

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Next.js
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: https://jwstrrxoyikjyafhaeyo.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB3c3RycnhveWlranlhZmhhZXlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxNTIzMzMsImV4cCI6MjA2NzcyODMzM30.ZpfX0zp5pJ_pstXjRkYNg85FoFEIP4qV3Js4nhTeFDU
          
      - name: Create deployment package
        run: |
          echo "📦 배포 패키지 생성 중..."
          tar -czf deploy.tar.gz .next package.json package-lock.json public next.config.ts
          ls -la deploy.tar.gz
          
      - name: Upload deployment package
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: ${{ secrets.CAFE24_PORT }}
          source: "deploy.tar.gz"
          target: "/tmp/"
          
      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: ${{ secrets.CAFE24_PORT }}
          timeout: 300s
          script: |
            echo "🚀 배포 시작..."
            
            # 시스템 정보 확인
            echo "📊 시스템 정보:"
            node --version || echo "Node.js 없음"
            npm --version || echo "npm 없음"
            echo "현재 사용자: $(whoami)"
            echo "현재 위치: $(pwd)"
            echo "홈 디렉토리: $HOME"
            
            # 기존 프로세스 정리
            echo "🔄 기존 프로세스 정리..."
            pkill -f "node.*3000" || echo "기존 node 프로세스 없음"
            pkill -f "npm.*start" || echo "기존 npm 프로세스 없음"
            
            # 배포 디렉토리 준비 (동적 경로 사용)
            echo "📁 배포 디렉토리 준비..."
            DEPLOY_DIR="$HOME/credit-app"
            echo "배포 디렉토리: $DEPLOY_DIR"
            mkdir -p "$DEPLOY_DIR"
            cd "$DEPLOY_DIR"
            echo "현재 위치: $(pwd)"
            echo "디렉토리 권한: $(ls -ld .)"
            
            # 기존 파일 백업
            if [ -d ".next" ]; then
              echo "🔄 기존 파일 백업..."
              mv .next .next.backup.$(date +%Y%m%d_%H%M%S) || true
            fi
            
            # 새 파일 압축 해제
            echo "📦 새 버전 설치 중..."
            tar -xzf /tmp/deploy.tar.gz
            echo "압축 해제 완료. 파일 목록:"
            ls -la
            
            # 환경 변수 설정
            echo "🔧 환경 변수 설정..."
            cat > .env.local << 'EOF'
            NODE_ENV=production
            PORT=3000
            HOSTNAME=0.0.0.0
            NEXT_PUBLIC_SUPABASE_URL=https://jwstrrxoyikjyafhaeyo.supabase.co
            NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB3c3RycnhveWlranlhZmhhZXlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxNTIzMzMsImV4cCI6MjA2NzcyODMzM30.ZpfX0zp5pJ_pstXjRkYNg85FoFEIP4qV3Js4nhTeFDU
            EOF
            echo "환경 변수 파일 생성 완료"
            
            # 의존성 설치
            echo "📋 의존성 설치 중..."
            npm ci --production --silent
            echo "의존성 설치 완료"
            
            # package.json 확인
            echo "📄 package.json 확인:"
            cat package.json | grep -A 5 "scripts"
            
            # 서버 시작 전 테스트
            echo "🧪 서버 시작 전 테스트..."
            npm list --depth=0 || echo "의존성 목록 출력 실패"
            
            # 서버 시작 - 간단한 방법
            echo "🎯 서버 시작 중..."
            
            # 포트 3000 사용 가능 여부 확인
            echo "🔍 포트 3000 사용 가능 여부 확인..."
            if netstat -tln | grep -q ":3000 "; then
              echo "❌ 포트 3000이 이미 사용 중입니다!"
              echo "사용 중인 프로세스:"
              lsof -i :3000 || netstat -tulpn | grep :3000
              echo "🔄 포트 3000 사용 프로세스 종료 시도..."
              fuser -k 3000/tcp || echo "fuser 명령 실패"
              sleep 2
            else
              echo "✅ 포트 3000 사용 가능"
            fi
            
            # Node.js 버전 호환성 확인
            echo "🔍 Node.js 버전 호환성 확인..."
            NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
            echo "Node.js 주 버전: $NODE_VERSION"
            if [ "$NODE_VERSION" -lt 18 ]; then
              echo "❌ Node.js 버전이 너무 낮습니다! (현재: $NODE_VERSION, 필요: 18+)"
              echo "🔄 대안: 더 낮은 버전 호환 방식 시도..."
            else
              echo "✅ Node.js 버전 호환됨"
            fi
            
            # 방법 1: 표준 npm start
            echo "🚀 방법 1: npm start 시도"
            npm start > /tmp/credit-app.log 2>&1 &
            NPM_PID=$!
            echo "npm start PID: $NPM_PID"
            
            # 3초 대기 후 상태 확인
            sleep 3
            if ps -p $NPM_PID > /dev/null 2>&1; then
              echo "✅ npm start 성공!"
              SERVER_STARTED=true
            else
              echo "❌ npm start 실패"
              echo "📝 npm start 로그:"
              cat /tmp/credit-app.log
              
              # 방법 2: 직접 next start 실행
              echo "🚀 방법 2: 직접 next start 시도"
              NODE_ENV=production PORT=3000 HOSTNAME=0.0.0.0 ./node_modules/.bin/next start > /tmp/credit-app2.log 2>&1 &
              NEXT_PID=$!
              echo "next start PID: $NEXT_PID"
              
              sleep 3
              if ps -p $NEXT_PID > /dev/null 2>&1; then
                echo "✅ next start 성공!"
                SERVER_STARTED=true
              else
                echo "❌ next start 실패"
                echo "📝 next start 로그:"
                cat /tmp/credit-app2.log
                
                # 방법 3: 더 간단한 방식
                echo "🚀 방법 3: 간단한 HTTP 서버 시도"
                cat > simple-server.js << 'JSEOF'
const http = require('http');
const fs = require('fs');
const path = require('path');

const port = 3000;
const hostname = '0.0.0.0';

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/html' });
  res.end(`
    <html>
      <body>
        <h1>🎉 카페24 배포 성공!</h1>
        <p>Next.js 앱이 성공적으로 배포되었습니다!</p>
        <p>현재 시간: ${new Date().toLocaleString()}</p>
        <p>서버 정보: Node.js ${process.version}</p>
      </body>
    </html>
  `);
});

server.listen(port, hostname, () => {
  console.log(`🌐 서버가 http://${hostname}:${port}에서 실행 중입니다`);
});
JSEOF
                
                node simple-server.js > /tmp/credit-app3.log 2>&1 &
                SIMPLE_PID=$!
                echo "간단한 서버 PID: $SIMPLE_PID"
                sleep 3
                
                if ps -p $SIMPLE_PID > /dev/null 2>&1; then
                  echo "✅ 간단한 서버 성공!"
                  SERVER_STARTED=true
                else
                  echo "❌ 모든 방법 실패"
                  echo "📝 간단한 서버 로그:"
                  cat /tmp/credit-app3.log
                  SERVER_STARTED=false
                fi
              fi
            fi
            
            # 서버 시작 확인
            sleep 2
            echo "📝 최종 서버 로그:"
            tail -10 /tmp/credit-app*.log
            
            # 서버 프로세스 확인
            echo "🔍 서버 프로세스 확인..."
            ps aux | grep -E "(node|npm|next)" | grep -v grep || echo "관련 프로세스 없음"
            
            # 포트 확인
            echo "🌐 포트 3000 확인..."
            netstat -tln | grep 3000 || echo "포트 3000 사용 중 아님"
            
            # 최종 확인
            sleep 3
            if [ "$SERVER_STARTED" = true ] || pgrep -f "node.*3000" > /dev/null || pgrep -f "npm.*start" > /dev/null || pgrep -f "next.*start" > /dev/null; then
              echo "✅ 배포 성공!"
              echo "🌐 서버가 실행 중입니다."
              echo "📝 실행 중인 프로세스:"
              ps aux | grep -E "(node|npm|next)" | grep -v grep
              echo "📝 포트 3000 상태:"
              netstat -tln | grep 3000
              echo "📝 최종 로그:"
              tail -5 /tmp/credit-app*.log
            else
              echo "❌ 서버 시작 실패"
              echo "📝 모든 로그:"
              echo "=== npm start 로그 ==="
              cat /tmp/credit-app.log 2>/dev/null || echo "로그 없음"
              echo "=== next start 로그 ==="
              cat /tmp/credit-app2.log 2>/dev/null || echo "로그 없음"
              echo "=== 간단한 서버 로그 ==="
              cat /tmp/credit-app3.log 2>/dev/null || echo "로그 없음"
              echo "🔍 최종 디버깅 정보:"
              echo "현재 프로세스:"
              ps aux | grep -E "(node|npm|next)" | grep -v grep
              echo "포트 상태:"
              netstat -tln | grep 3000
              echo "서버 파일 상태:"
              ls -la ./node_modules/.bin/next || echo "next 바이너리 없음"
              echo "환경 변수:"
              env | grep -E "(NODE|PORT|HOSTNAME)"
              echo "디스크 공간:"
              df -h .
              echo "메모리 사용량:"
              free -h
              exit 1
            fi
            
            # 임시 파일 정리
            rm -f /tmp/deploy.tar.gz
            echo "🎉 배포 완료!"
