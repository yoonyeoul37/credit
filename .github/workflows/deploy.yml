name: Deploy to Cafe24

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Next.js
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: https://jwstrrxoyikjyafhaeyo.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB3c3RycnhveWlranlhZmhhZXlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxNTIzMzMsImV4cCI6MjA2NzcyODMzM30.ZpfX0zp5pJ_pstXjRkYNg85FoFEIP4qV3Js4nhTeFDU
          
      - name: Create deployment package
        run: |
          echo "📦 배포 패키지 생성 중..."
          tar -czf deploy.tar.gz .next package.json package-lock.json public next.config.ts
          ls -la deploy.tar.gz
          
      - name: Upload deployment package
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: ${{ secrets.CAFE24_PORT }}
          source: "deploy.tar.gz"
          target: "/tmp/"
          
      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: ${{ secrets.CAFE24_PORT }}
          timeout: 300s
          script: |
            echo "🚀 배포 시작..."
            
            # 시스템 정보 확인
            echo "📊 시스템 정보:"
            node --version || echo "Node.js 없음"
            npm --version || echo "npm 없음"
            whoami
            pwd
            
            # 기존 프로세스 정리
            echo "🔄 기존 프로세스 정리..."
            pkill -f "node.*3000" || echo "기존 node 프로세스 없음"
            pkill -f "npm.*start" || echo "기존 npm 프로세스 없음"
            
            # 배포 디렉토리 준비
            echo "📁 배포 디렉토리 준비..."
            mkdir -p /home/${{ secrets.CAFE24_USERNAME }}/credit-app
            cd /home/${{ secrets.CAFE24_USERNAME }}/credit-app
            echo "현재 위치: $(pwd)"
            
            # 기존 파일 백업
            if [ -d ".next" ]; then
              echo "🔄 기존 파일 백업..."
              mv .next .next.backup.$(date +%Y%m%d_%H%M%S) || true
            fi
            
            # 새 파일 압축 해제
            echo "📦 새 버전 설치 중..."
            tar -xzf /tmp/deploy.tar.gz
            echo "압축 해제 완료. 파일 목록:"
            ls -la
            
            # 환경 변수 설정
            echo "🔧 환경 변수 설정..."
            cat > .env.local << 'EOF'
            NODE_ENV=production
            PORT=3000
            HOSTNAME=0.0.0.0
            NEXT_PUBLIC_SUPABASE_URL=https://jwstrrxoyikjyafhaeyo.supabase.co
            NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB3c3RycnhveWlranlhZmhhZXlvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxNTIzMzMsImV4cCI6MjA2NzcyODMzM30.ZpfX0zp5pJ_pstXjRkYNg85FoFEIP4qV3Js4nhTeFDU
            EOF
            echo "환경 변수 파일 생성 완료"
            
            # 의존성 설치
            echo "📋 의존성 설치 중..."
            npm ci --production --silent
            echo "의존성 설치 완료"
            
            # package.json 확인
            echo "📄 package.json 확인:"
            cat package.json | grep -A 5 "scripts"
            
            # 서버 시작 전 테스트
            echo "🧪 서버 시작 전 테스트..."
            npm list --depth=0 || echo "의존성 목록 출력 실패"
            
            # 서버 시작
            echo "🎯 서버 시작 중..."
            echo "방법 1: npm start 시도"
            npm start > /tmp/credit-app.log 2>&1 &
            NPM_PID=$!
            echo "npm start PID: $NPM_PID"
            
            # 3초 대기 후 상태 확인
            sleep 3
            if ps -p $NPM_PID > /dev/null 2>&1; then
              echo "✅ npm start 성공!"
            else
              echo "❌ npm start 실패. 직접 next start 시도..."
              pkill -f npm || true
              
              # 직접 next start 실행
              echo "방법 2: 직접 next start 시도"
              NODE_ENV=production PORT=3000 HOSTNAME=0.0.0.0 ./node_modules/.bin/next start > /tmp/credit-app.log 2>&1 &
              NEXT_PID=$!
              echo "next start PID: $NEXT_PID"
              
              sleep 3
              if ps -p $NEXT_PID > /dev/null 2>&1; then
                echo "✅ next start 성공!"
              else
                echo "❌ next start도 실패. 노드 직접 실행 시도..."
                pkill -f next || true
                
                # Node.js 직접 실행
                echo "방법 3: Node.js 직접 실행"
                cat > server.js << 'JSEOF'
const { createServer } = require('http');
const { parse } = require('url');
const next = require('next');

const dev = false;
const hostname = '0.0.0.0';
const port = 3000;

const app = next({ dev, hostname, port });
const handle = app.getRequestHandler();

app.prepare().then(() => {
  createServer(async (req, res) => {
    try {
      const parsedUrl = parse(req.url, true);
      await handle(req, res, parsedUrl);
    } catch (err) {
      console.error('Error occurred handling', req.url, err);
      res.statusCode = 500;
      res.end('internal server error');
    }
  }).listen(port, (err) => {
    if (err) throw err;
    console.log(`> Ready on http://${hostname}:${port}`);
  });
});
JSEOF
                
                node server.js > /tmp/credit-app.log 2>&1 &
                NODE_PID=$!
                echo "Node.js 직접 실행 PID: $NODE_PID"
                sleep 3
              fi
            fi
            
            # 서버 로그 초기 확인
            echo "📝 서버 시작 로그:"
            tail -10 /tmp/credit-app.log
            
            # 서버 프로세스 확인
            echo "🔍 서버 프로세스 확인..."
            ps aux | grep -E "(node|npm|next)" | grep -v grep || echo "관련 프로세스 없음"
            
            # 포트 확인
            echo "🌐 포트 3000 확인..."
            netstat -tln | grep 3000 || echo "포트 3000 사용 중 아님"
            
            # 최종 확인
            sleep 5
            if pgrep -f "node.*3000" > /dev/null || pgrep -f "npm.*start" > /dev/null || pgrep -f "next.*start" > /dev/null; then
              echo "✅ 배포 성공!"
              echo "🌐 서버가 실행 중입니다."
              echo "📝 최종 로그:"
              tail -5 /tmp/credit-app.log
            else
              echo "❌ 모든 시도 실패"
              echo "📝 전체 로그:"
              cat /tmp/credit-app.log
              echo "🔍 최종 디버깅 정보:"
              echo "현재 프로세스:"
              ps aux | grep -E "(node|npm|next)" | grep -v grep
              echo "포트 상태:"
              netstat -tln | grep 3000
              echo "서버 파일 상태:"
              ls -la ./node_modules/.bin/next || echo "next 바이너리 없음"
              echo "환경 변수:"
              env | grep -E "(NODE|PORT|HOSTNAME)"
              exit 1
            fi
            
            # 임시 파일 정리
            rm -f /tmp/deploy.tar.gz
            echo "🎉 배포 완료!"
